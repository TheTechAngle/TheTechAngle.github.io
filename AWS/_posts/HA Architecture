High Available Architecture
Load balancers

There are three type
1) Application LB - Best suited for balancing HTTP adn HTTPS traffic. Application aware, adn can create advanced request routing
2) Network LB - Operates at the Netwrok level, for load balancing TCP traffic. designed for high performance traffic that is not conventional Web traffic
3) Classic LB - Legacy ELBs, cost efficient one. You can load balance HTTP/S applications and use L7 specific features. You can also use strict Layer 4 load balancing for applications that rely purely on TCP protocol

Instances monitored by ELBs are either 'InService' or 'OutOfService'
Health checks checks the instance health by talking to it

They have their own DNS name, no IP address. (You can get a static IP address for Networkd LV) READ FAQs
504 Error - Server has failed, not ELB

X-Forwarded-For header = to get the IP address of the actual client IP address 

Target Group - Can create target groups within the service to group instances

* What are sticky sessions?- allow yoou to bind a users session to a particular ec2 instance so that sll requests from the user are sent to the same instance
classic LBs do this, so do the Application LBs, but the traffic is sent at the target group level

* Cross Zone LB
 Traffic is sent to Route53. W/O Cross Xone LB, ELBs cant send traffic to other regions. With Cross Zone LB, the ELB can send traffic to other regions as well.
 
* Path Patterns
Route based on paths. Can send all requests for images to one target zone/ ec2 , and everything to another

CloudFormation is templating v/s Elastic BeanStalk which is for noobs

Auto-Scaling Group
* Requires a Launch Configuration, where you can set min/max number of instances, and when you'd want more instance. 
* The ASG is then set by using the Launch Configuration
* You can also add a configuration and set the Load Balancer target group, so that the instances are placed behind the LB as they are spun up

Highly Available Architecture
* EVERYTHING FAILS
* Difference between Multi-AZ (disaster recovery) and Read Replicas(performance) for RDS
* Scaling out (with Autoscaling groups) v/s Scaling up (increasing the RAM/CPU instance type)
